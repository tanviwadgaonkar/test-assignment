{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanvi\\\\MyProject\\\\frontend\\\\src\\\\components\\\\DataDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst DataDisplay = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/data').then(response => {\n      setData(response.data);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 25\n  }, this);\n  const chartData = {\n    labels: data.map(item => item.label),\n    // Adjust 'label' to match your data's field\n    datasets: [{\n      label: 'Data',\n      data: data.map(item => item.value),\n      // Adjust 'value' to match your data's field\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Data Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'top'\n          },\n          tooltip: {\n            callbacks: {\n              label: function (tooltipItem) {\n                return `${tooltipItem.dataset.label}: ${tooltipItem.raw}`;\n              }\n            }\n          }\n        },\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: 'Labels'\n            }\n          },\n          y: {\n            title: {\n              display: true,\n              text: 'Values'\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(DataDisplay, \"YP7e7Smzxlgf2d3MqLcgRZjo83U=\");\n_c = DataDisplay;\nexport default DataDisplay;\nvar _c;\n$RefreshReg$(_c, \"DataDisplay\");","map":{"version":3,"names":["React","useEffect","useState","axios","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","DataDisplay","_s","data","setData","loading","setLoading","get","then","response","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","chartData","labels","map","item","label","datasets","value","backgroundColor","borderColor","borderWidth","options","responsive","plugins","legend","position","tooltip","callbacks","tooltipItem","dataset","raw","scales","x","title","display","text","y","_c","$RefreshReg$"],"sources":["C:/Users/tanvi/MyProject/frontend/src/components/DataDisplay.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst DataDisplay = () => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:5000/api/data')\r\n            .then(response => {\r\n                setData(response.data);\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching data:', error);\r\n                setLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    if (loading) return <div>Loading...</div>;\r\n\r\n    const chartData = {\r\n        labels: data.map(item => item.label), // Adjust 'label' to match your data's field\r\n        datasets: [\r\n            {\r\n                label: 'Data',\r\n                data: data.map(item => item.value), // Adjust 'value' to match your data's field\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                borderColor: 'rgba(75,192,192,1)',\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Data Visualization</h2>\r\n            <Bar\r\n                data={chartData}\r\n                options={{\r\n                    responsive: true,\r\n                    plugins: {\r\n                        legend: {\r\n                            position: 'top',\r\n                        },\r\n                        tooltip: {\r\n                            callbacks: {\r\n                                label: function (tooltipItem) {\r\n                                    return `${tooltipItem.dataset.label}: ${tooltipItem.raw}`;\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    scales: {\r\n                        x: {\r\n                            title: {\r\n                                display: true,\r\n                                text: 'Labels'\r\n                            }\r\n                        },\r\n                        y: {\r\n                            title: {\r\n                                display: true,\r\n                                text: 'Values'\r\n                            }\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DataDisplay;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}